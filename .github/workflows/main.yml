name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2  # Versión más estable
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'  # Versión LTS
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: |
        npm test -- --watchAll=false --ci --coverage
        # Generar archivo de resultados manualmente
        mkdir -p test-results
        echo "<testsuite></testsuite>" > test-results/junit.xml
        
    - name: Upload coverage report
      run: |
        # Subir resultados manualmente como artefacto
        tar -czf test-results.tar.gz coverage/ test-results/
        curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/gzip" \
          --data-binary @test-results.tar.gz \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ github.run_id }}/assets?name=test-results.tar.gz"
      
    - name: Upload to Codecov
      run: |
        # Enviar a Codecov directamente
        bash <(curl -s https://codecov.io/bash)

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Deploy to GitHub Pages
      run: |
        # Despliegue manual sin acciones de terceros
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        git checkout --orphan gh-pages
        git rm -rf .
        cp -r build/* .
        git add .
        git commit -m "Deploy to GitHub Pages"
        git push origin gh-pages --force
